name: main

on:
  workflow_call:
  push:
    branches:
      - main
      - release
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  unit:
    strategy:
      matrix:
        platform: [ubuntu-24.04, macos-13, macos-14, windows-2022]
        python-version: ['3.10', '3.11', '3.12']
        include:
          - tox-env: 'unit'
          - python-version: '3.12'
            platform: 'ubuntu-24.04'
            tox-env: ${{ github.actor != 'dependabot[bot]' && 'unit-cover' || 'unit' }}

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run unit tests with tox${{ matrix.tox-env == 'unit-cover' && ' (with coverage).' || '.' }}
        shell: bash
        run: |
            tox -e ${{ matrix.tox-env }}

      - uses: codecov/codecov-action@v3
        if: matrix.tox-env == 'unit-cover'
        with:
          flags: unit,${{ matrix.platform }},python-${{ matrix.python-version }}
          files: ./.coverage.xml

      - name: Check coverage level
        if: matrix.tox-env == 'unit-cover'
        shell: bash
        run: |
          tox -e coverage-check


  doctest:
    strategy:
      matrix:
        platform: [ubuntu-24.04, macos-13, macos-14, windows-2022]
        python-version: ['3.10', '3.11', '3.12']

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run doctest tests with tox
        shell: bash
        run: tox -e doctest


  lint:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.12']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint MANIFEST and Python files
        run: tox -e lint


  type-check:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.12']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}
      - name: Type checking
        run: tox -e type-check


  docs-build:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.12']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install graphviz
        run: sudo apt install graphviz
      - name: Build docs
        run: tox -e docs-build

  # This is only needed to test that doctests properly import everything needed
  # The pytest doctest autoimports the current module
  docs-test:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.12']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}
      - name: Test docs
        run: |
          tox -e docs-test
          tox -e docs-test


  docs-lint:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
        python-version: ['3.12']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint docs
        run: tox -e docs-lint
