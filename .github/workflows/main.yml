name: main

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  ci:
    name: build-ci
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9']
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox
      env:
        PLATFORM: ${{ matrix.platform }}
    - name: Test docs
      if: matrix.platform == 'ubuntu-latest' && matrix.python-version == '3.9'
      run: tox -e apidoc,docs,doctest

  get-nonmem:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Cache NONMEM
        id: cache-nonmem
        uses: actions/cache@v2
        with:
            path: 744.zip
            key: nonmem-744
      - name: Download NONMEM
        if: steps.cache-nonmem.outputs.cache-hit != 'true'
        run: |
          sudo apt install lynx
          echo 'key /' >>lynxcmds
          echo 'key 7' >>lynxcmds
          echo 'key 4' >>lynxcmds
          echo 'key 4' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key /' >>lynxcmds
          echo 'key z' >>lynxcmds
          echo 'key i' >>lynxcmds
          echo 'key p' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key d' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key 7' >>lynxcmds
          echo 'key 4' >>lynxcmds
          echo 'key 4' >>lynxcmds
          echo 'key .' >>lynxcmds
          echo 'key z' >>lynxcmds
          echo 'key i' >>lynxcmds
          echo 'key p' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key Q' >>lynxcmds
          lynx -accept-all-cookies nonmem.iconplc.com -cmd_script=lynxcmds
      - name: Upload cache workaround
        uses: actions/upload-artifact@v2
        with:
          name: cache-workaround
          path: 744.zip

  integration-ubuntu:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [get-nonmem]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Pharmpy
        uses: actions/checkout@v1
      - name: Cache NONMEM
        id: cache-nonmem
        uses: actions/cache@v2
        with:
            path: 744.zip
            key: nonmem-744
      - name: Unzip NONMEM
        run: unzip -P $ZIP_KEY 744.zip
        env:
          ZIP_KEY: ${{secrets.ZIP_KEY}}
      - name: Install gfortran
        run: sudo apt install gfortran
      - name: Install NONMEM
        run: |
          cd nm744CD
          /bin/bash SETUP74 $(realpath .) $(realpath ../nm744) gfortran y ar same rec q
      - name: NONMEM license
        run: echo $LICENSE_KEY >nm744/license/nonmem.lic
        env:
          LICENSE_KEY: ${{secrets.LICENSE_KEY}}
      - name: Create pharmpy.conf
        run: |
          export CONFDIR=/home/runner/.config/Pharmpy
          mkdir -p $CONFDIR
          echo '[pharmpy.plugins.nonmem]' > $CONFDIR/pharmpy.conf
          echo 'parameter_names=comment,basic' >> $CONFDIR/pharmpy.conf
          echo "default_nonmem_path=$(realpath nm744)" >> $CONFDIR/pharmpy.conf
          cat $CONFDIR/pharmpy.conf
          ls -l /home/runner/work/pharmpy/pharmpy/nm744
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Run integration tests
        run: tox -e integration
        env:
          PLATFORM: ubuntu-latest

  integration-macos:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [get-nonmem]
    runs-on: macos-latest
    steps:
      - name: Checkout Pharmpy
        uses: actions/checkout@v1
      - name: Setup gfortran
        run: |
          sudo ln -s /usr/local/bin/gfortran-9 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@9/9.3.0_1/lib/gcc/9 /usr/local/gfortran/lib
      - name: Install realpath
        run: brew install coreutils
      - name: Get NONMEM
        id: cache-nonmem
        uses: actions/cache@v2
        with:
            path: 744.zip
            key: nonmem-744
      - name: Unzip NONMEM
        run: unzip -P $ZIP_KEY 744.zip
        env:
          ZIP_KEY: ${{secrets.ZIP_KEY}}
      - name: Install NONMEM
        run: |
          cd nm744CD
          /bin/bash SETUP74 $(realpath .) $(realpath ../nm744) gfortran y ar same rec q
      - name: NONMEM license
        run: echo $LICENSE_KEY >nm744/license/nonmem.lic
        env:
          LICENSE_KEY: ${{secrets.LICENSE_KEY}}
      - name: Create pharmpy.conf
        run: |
          export CONFDIR=/Users/runner/Library/Application\ Support/Pharmpy
          mkdir -p "$CONFDIR"
          echo '[pharmpy.plugins.nonmem]' > "$CONFDIR/pharmpy.conf"
          echo 'parameter_names=comment,basic' >> "$CONFDIR/pharmpy.conf"
          echo "default_nonmem_path=$(realpath nm744)" >> "$CONFDIR/pharmpy.conf"
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Run integration tests
        run: tox -e integration
        env:
          PLATFORM: macos-latest

  integration-windows:
      if: startsWith(github.ref, 'refs/tags/')
      needs: [get-nonmem]
      runs-on: windows-latest
      steps:
        - name: Checkout Pharmpy
          uses: actions/checkout@v1
        - name: Get NONMEM
          uses: actions/download-artifact@v2
          with:
              name: cache-workaround
        - name: Unzip NONMEM
          run: 7z x 744.zip -p%ZIP_KEY%
          env:
            ZIP_KEY: ${{secrets.ZIP_KEY}}
          shell: cmd
        - name: NONMEM license
          run: echo $LICENSE_KEY >nm744CD/nonmem.lic
          env:
            LICENSE_KEY: ${{secrets.LICENSE_KEY}}
          shell: bash
        - name: Install NONMEM
          run: |
            set INSTALLDIR=%CD%\nm744
            cd nm744CD
            SETUP74.bat %CD% %INSTALLDIR% gfortran y ar same rec q
          shell: cmd
        - name: Create pharmpy.conf
          run: |
            export CONFDIR=/c/Users/runneradmin/AppData/Local/Pharmpy/Pharmpy
            mkdir -p $CONFDIR
            echo '[pharmpy.plugins.nonmem]' > $CONFDIR/pharmpy.conf
            echo 'parameter_names=comment,basic' >> $CONFDIR/pharmpy.conf
            echo 'default_nonmem_path=D:\a\pharmpy\pharmpy\nm744' >> $CONFDIR/pharmpy.conf
          shell: bash
        - name: Set up Python 3.9
          uses: actions/setup-python@v2
          with:
            python-version: 3.9
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install tox tox-gh-actions
        - name: Run integration tests
          run: tox -e integration
          env:
            PLATFORM: windows-latest

  build:
    needs: [ci, integration-ubuntu, integration-macos, integration-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout pharmpy/pharmpy
      uses: actions/checkout@v2
      with:
          path: pharmpy
    - name: Checkout pharmpy/pharmpy.github.io
      uses: actions/checkout@v2
      with:
        repository: pharmpy/pharmpy.github.io
        path: pharmpy.github.io
        token: ${{secrets.DOC_TOKEN}}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel tox tox-gh-actions
        sudo apt install graphviz
    - name: Test with tox
      run: |
        cd pharmpy
        tox
      env:
        PLATFORM: ${{ matrix.platform }}
    - name: Build documentation
      run: |
        cd pharmpy
        tox -e apidoc
        tox -e docs
    - name: Build wheel
      run: |
        cd pharmpy
        python setup.py bdist_wheel
    - name: Build source package
      run: |
        cd pharmpy
        python setup.py sdist --formats=gztar
    - name: Prepare upload files
      run: |
        cd pharmpy
        mkdir upload
        cp dist/*.whl dist/*.tar.gz upload
    - name: Publish documentation
      run: |
        cp -RT pharmpy/dist/docs/ pharmpy.github.io/latest/
        cd pharmpy.github.io
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add -A
        git commit -m "Documentation update"
        git push https://$USERNAME:$REPO_KEY@github.com/pharmpy/pharmpy.github.io.git
      env:
        REPO_KEY: ${{secrets.DOC_TOKEN}}
        USERNAME: github-actions[bot]
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: pharmpy/upload/
  trigger-pharmr-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger pharmr workflow
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -u "$USERNAME:$REPO_KEY" \
          https://api.github.com/repos/pharmpy/pharmr/actions/workflows/build_docs.yaml/dispatches \
          -d '{"ref":"main"}'
        env:
            REPO_KEY: ${{secrets.DOC_TOKEN}}
            USERNAME: github-actions[bot]

